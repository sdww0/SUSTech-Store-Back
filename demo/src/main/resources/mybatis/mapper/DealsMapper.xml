<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.susstore.mapper.DealMapper" >


    <resultMap type="com.susstore.pojo.Deal" id="deal1">
        <id property="dealId" column="deal_id" />
        <result property="stage" column="stage"/>
        <result property="mailingNumber" column="mailing_number"/>
        <result property="needMailing" column="need_mailing"/>
        <result property="price" column="price1"/>
        <result property="orderTime" column="order_time"/>
        <association property="seller" javaType="com.susstore.pojo.Users">
            <id property="userId" column="user_id1"/>
            <result property="sign" column="sign1"/>
            <result property="userName" column="user_name1"/>
            <result property="gender" column="gender1"/>
            <result property="credit" column="credit1"/>
            <result property="picturePath" column="picture_path1"/>
        </association>
        <association property="buyer" javaType="com.susstore.pojo.Users">
            <id property="userId" column="user_id2"/>
            <result property="sign" column="sign2"/>
            <result property="userName" column="user_name2"/>
            <result property="gender" column="gender2"/>
            <result property="credit" column="credit2"/>
            <result property="picturePath" column="picture_path2"/>
        </association>
        <association property="shippingAddress" javaType="com.susstore.pojo.Address">
            <id property="addressId" column="address_id"/>
            <result property="recipientName" column="recipient_name"/>
            <result property="addressName" column="address_name"/>
            <result property="phone" column="phone"/>
        </association>
        <association property="goodsAbbreviation" javaType="com.susstore.pojo.GoodsAbbreviation">
            <id property="goodsId" column="goods_id1"/>
            <result property="price" column="price2"/>
            <result property="title" column="title"/>
            <result property="isSell" column="is_sell"/>
            <result property="postage" column="postage"/>
            <result property="picturePath" column="picture_path4"/>
            <association property="announcer" javaType="com.susstore.pojo.Users">
                <id property="userId" column="user_id3"/>
                <result property="sign" column="sign3"/>
                <result property="userName" column="user_name3"/>
                <result property="gender" column="gender3"/>
                <result property="credit" column="credit3"/>
                <result property="picturePath" column="picture_path3"/>
            </association>
        </association>
    </resultMap>

    <insert id="addDeal" parameterType="Deal" useGeneratedKeys="true" keyProperty="dealId">
        insert into store.deal
        ( stage, price,goods_id, buyer_id, seller_id,order_time,shipping_address_id)
        values (0,#{price},#{goodsAbbreviation.goodsId},#{buyer.userId},#{seller.userId},#{orderTime},#{shippingAddress.addressId})
        returning deal_id;
    </insert>

    <update id="updateDeal" parameterType="Deal">
        update store."goods"
        <set>
            <if test="stage != null"> stage= #{stage},</if>
            <if test="Goods != null">goods_id= #{goods.goodsId},</if>
            <if test="buyer != null">buyer_id= #{buyer.userId},</if>
            <if test="seller != null">seller_id= #{seller.userId},</if>
            <if test="mailingNumber != null">mailing_number= #{mailingNumber},</if>
            <if test="shippingAddress != null">shipping_address= #{shippingAddress},</if>
        </set>
        where goods_id= #{goodsId}
    </update>


    <select id="getDealById" resultMap="deal1">
        select deal_id,stage,mailing_number,need_mailing,d.price price1,order_time,
               u1.user_id user_id1, u1.sign sign1,u1.user_name user_name1,u1.gender gender1,
               u1.credit credit1,u1.picture_path picture_path1,
               u2.user_id user_id2, u2.sign sign2,u2.user_name user_name2,u2.gender gender2,
               u2.credit credit2,u2.picture_path picture_path2,
               a.address_id address_id, recipient_name, address_name, a.phone phone,
               g.goods_id goods_id1, g.price price2, title, is_sell, postage, gp.picture_path picture_path4,
               u3.user_id user_id3, u3.sign sign3,u3.user_name user_name3,u3.gender gender3,
               u3.credit credit3,u2.picture_path picture_path3
        from store.deal d
            join store.goods g
                on d.goods_id = g.goods_id and d.deal_id = #{dealId}
            left join store.goods_picture gp
                on gp.is_default_picture and gp.goods_id = d.goods_id
            join store.users u1
                on u1.user_id = d.seller_id
            join store.users u2
                on u2.user_id = d.buyer_id
            join store.users u3
                 on u3.user_id = g.announcer_id
            left join store.address a
                on a.address_id = d.shipping_address_id;
    </select>

    <select id="getDealStageBySellerIdAndDealId" resultType="Integer">
        select stage
        from store.deal where seller_id= #{sellerId} and deal_id= #{dealId};
    </select>

    <select id="getDealStageByBuyerIdAndDealId" resultType="Integer">
        select stage
        from store.deal where buyer_id= #{buyerId} and deal_id= #{dealId};
    </select>

    <select id="getBuyerIdByDealId" resultType="Integer">
        select buyer_id
        from store.deal where deal_id= #{dealId};
    </select>

    <select id="getSellerIdByDealId" resultType="Integer">
        select seller_id
        from store.deal where deal_id= #{dealId};
    </select>

    <select id="getDealStageByDealId" resultType="Integer">
        select stage
        from store.deal where deal_id= #{dealId};
    </select>

    <update id="changeDealStage">
        update store.deal set stage = #{stage} where deal_id= #{dealId};
    </update>

    <update id="addMailingNumber">
        update store.deal set mailing_number = #{mailingNumber},need_mailing = true
        where deal_id = #{dealId};
    </update>

    <update id="notNeedMailingNumber">
        update store.deal set need_mailing = false
        where deal_id = #{dealId};
    </update>

    <select id="checkUserHadComment" resultType="Boolean">
        select case(count(*)) when 0 then false else true end as hadComment
        from (select belong_user_id
        from store.users_comment
        where belong_deal_id= #{dealId} and
        belong_user_id = #{userId}) cnt ;
    </select>


    <insert id="addUserComment">
        insert into store.users_comment(belong_user_id,
                                        comment_user_id,
                                        comment_date,
                                        content,
                                        belong_deal_id,is_good)
                                         VALUES
                                         (#{targetUserId},#{commentUserId},#{date},#{content},#{dealId},#{isGood})
    </insert>


    <select id="hasDeliver" resultType="Boolean">
        select need_mailing is not null
        from store.deal
        where deal_id = #{dealId};
    </select>

    <update id="setAddress" >
        update store.deal set shipping_address_id = #{addressId} where deal_id = #{dealId};
    </update>

    <select id="getDealByBuyerAndStage" resultMap="deal1">
        select deal_id,stage,mailing_number,need_mailing,d.price price1,order_time,
               u1.user_id user_id1, u1.sign sign1,u1.user_name user_name1,u1.gender gender1,
               u1.credit credit1,u1.picture_path picture_path1,
               u2.user_id user_id2, u2.sign sign2,u2.user_name user_name2,u2.gender gender2,
               u2.credit credit2,u2.picture_path picture_path2,
               a.address_id address_id, recipient_name, address_name, a.phone phone,
               g.goods_id goods_id1, g.price price2, title, is_sell, postage, gp.picture_path picture_path4,
               u3.user_id user_id3, u3.sign sign3,u3.user_name user_name3,u3.gender gender3,
               u3.credit credit3,u2.picture_path picture_path3
        from store.deal d
                 join store.goods g
                      on d.goods_id = g.goods_id and d.buyer_id = #{userId} and d.stage = #{stage}
                 left join store.goods_picture gp
                           on gp.is_default_picture and gp.goods_id = d.goods_id
                 join store.users u1
                      on u1.user_id = d.seller_id
                 join store.users u2
                      on u2.user_id = d.buyer_id
                 join store.users u3
                      on u3.user_id = g.announcer_id
                 left join store.address a
                           on a.address_id = d.shipping_address_id;
    </select>

    <select id="getDealBySellerAndStage" resultMap="deal1">
        select deal_id,stage,mailing_number,need_mailing,d.price price1,order_time,
               u1.user_id user_id1, u1.sign sign1,u1.user_name user_name1,u1.gender gender1,
               u1.credit credit1,u1.picture_path picture_path1,
               u2.user_id user_id2, u2.sign sign2,u2.user_name user_name2,u2.gender gender2,
               u2.credit credit2,u2.picture_path picture_path2,
               a.address_id address_id, recipient_name, address_name, a.phone phone,
               g.goods_id goods_id1, g.price price2, title, is_sell, postage, gp.picture_path picture_path4,
               u3.user_id user_id3, u3.sign sign3,u3.user_name user_name3,u3.gender gender3,
               u3.credit credit3,u2.picture_path picture_path3
        from store.deal d
                 join store.goods g
                      on d.goods_id = g.goods_id and d.seller_id = #{userId} and d.stage = #{stage}
                 left join store.goods_picture gp
                           on gp.is_default_picture  and gp.goods_id = d.goods_id
                 join store.users u1
                      on u1.user_id = d.seller_id
                 join store.users u2
                      on u2.user_id = d.buyer_id
                 join store.users u3
                      on u3.user_id = g.announcer_id
                 left join store.address a
                           on a.address_id = d.shipping_address_id;
    </select>
    
    <insert id="addAppealingContent" >
        insert into store.appealing_deal(deal_id, content, picture_path,is_process) VALUES (#{dealId},#{content},#{picturePath},false);
    </insert>
    
    <select id="getDealPrice" resultType="Float">
        select deal.price from store.deal where deal_id = #{dealId}
    </select>

    <select id="getDealBySeller" resultMap="deal1">
        select deal_id,stage,mailing_number,need_mailing,d.price price1,order_time,
               u1.user_id user_id1, u1.sign sign1,u1.user_name user_name1,u1.gender gender1,
               u1.credit credit1,u1.picture_path picture_path1,
               u2.user_id user_id2, u2.sign sign2,u2.user_name user_name2,u2.gender gender2,
               u2.credit credit2,u2.picture_path picture_path2,
               a.address_id address_id, recipient_name, address_name, a.phone phone,
               g.goods_id goods_id1, g.price price2, title, is_sell, postage, gp.picture_path picture_path4,
               u3.user_id user_id3, u3.sign sign3,u3.user_name user_name3,u3.gender gender3,
               u3.credit credit3,u2.picture_path picture_path3
        from store.deal d
                 join store.goods g
                      on d.goods_id = g.goods_id and d.seller_id = #{userId}
                 left join store.goods_picture gp
                           on gp.is_default_picture and gp.goods_id = d.goods_id
                 join store.users u1
                      on u1.user_id = d.seller_id
                 join store.users u2
                      on u2.user_id = d.buyer_id
                 join store.users u3
                      on u3.user_id = g.announcer_id
                 left join store.address a
                           on a.address_id = d.shipping_address_id;
    </select>

    <select id="getDealByBuyer" resultMap="deal1">
        select deal_id,stage,mailing_number,need_mailing,d.price price1,order_time,
               u1.user_id user_id1, u1.sign sign1,u1.user_name user_name1,u1.gender gender1,
               u1.credit credit1,u1.picture_path picture_path1,
               u2.user_id user_id2, u2.sign sign2,u2.user_name user_name2,u2.gender gender2,
               u2.credit credit2,u2.picture_path picture_path2,
               a.address_id address_id, recipient_name, address_name, a.phone phone,
               g.goods_id goods_id1, g.price price2, title, is_sell, postage, gp.picture_path picture_path4,
               u3.user_id user_id3, u3.sign sign3,u3.user_name user_name3,u3.gender gender3,
               u3.credit credit3,u2.picture_path picture_path3
        from store.deal d
                 join store.goods g
                      on d.goods_id = g.goods_id and d.buyer_id = #{userId}
                 left join store.goods_picture gp
                           on gp.is_default_picture  and gp.goods_id = d.goods_id
                 join store.users u1
                      on u1.user_id = d.seller_id
                 join store.users u2
                      on u2.user_id = d.buyer_id
                 join store.users u3
                      on u3.user_id = g.announcer_id
                 left join store.address a
                           on a.address_id = d.shipping_address_id;
    </select>

</mapper>