<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.susstore.mapper.DealMapper" >

    <select id="getDeal" resultType="Deal">
        select * from store.deal
        where goods_id= #{goodsId} and seller_id = #{sellerId} and buyer_id = #{buyerId}
            and stage= #{stage}
    </select>

    <insert id="addDeal" parameterType="Deal" useGeneratedKeys="true" keyProperty="dealId">
        insert into store.deal
        ( stage, goods_id, buyer_id, seller_id)
        values (#{stage},#{goods.goodsId},#{buyer.userId},#{seller.userId})
        returning deal_id;
    </insert>

    <update id="updateDeal" parameterType="Deal">
        update store."goods"
        <set>
            <if test="stage != null"> stage= #{stage},</if>
            <if test="Goods != null">goods_id= #{goods.goodsId},</if>
            <if test="buyer != null">buyer_id= #{buyer.userId},</if>
            <if test="seller != null">seller_id= #{seller.userId},</if>
            <if test="mailingNumber != null">mailing_number= #{mailingNumber},</if>
            <if test="shippingAddress != null">shipping_address= #{shippingAddress},</if>
        </set>
        where goods_id= #{goodsId}
    </update>


    <select id="getDealById" resultType="Deal">
        select * from store.deal where deal_id= #{dealId}
    </select>

    <select id="getDealStageBySellerIdAndDealId" resultType="Integer">
        select stage
        from store.deal where seller_id= #{sellerId} and deal_id= #{dealId};
    </select>

    <select id="getDealStageByBuyerIdAndDealId" resultType="Integer">
        select stage
        from store.deal where buyer_id= #{buyerId} and deal_id= #{dealId};
    </select>

    <select id="getBuyerIdByDealId" resultType="Integer">
        select buyer_id
        from store.deal where deal_id= #{dealId};
    </select>

    <select id="getSellerIdByDealId" resultType="Integer">
        select seller_id
        from store.deal where deal_id= #{dealId};
    </select>

    <select id="getDealStageByDealId" resultType="Integer">
        select stage
        from store.deal where deal_id= #{dealId};
    </select>

    <update id="changeDealStage">
        update store.deal set stage = #{stage} where deal_id= #{dealId};
    </update>

    <select id="getGoodsPrice" resultType="Float">
        select price
        from store.deal join store.goods on deal_id = #{dealId} and deal.goods_id = goods.goods_id;
    </select>

    <update id="addMailingNumber">
        update store.deal set mailing_number = #{mailingNumber},need_mailing = true
        where deal_id = #{dealId};
    </update>

    <update id="notNeedMailingNumber">
        update store.deal set need_mailing = false
        where deal_id = #{dealId};
    </update>

    <select id="checkUserHadComment" resultType="Boolean">
        select case(count(*)) when 0 then false else true end as hadComment
        from (select belong_user_id
        from store.users_comment
        where belong_deal_id= #{dealId} and
        belong_user_id = #{userId}) cnt ;
    </select>


    <insert id="addUserComment">
        insert into store.users_comment(belong_user_id,
                                        comment_user_id,
                                        comment_date,
                                        content,
                                        belong_deal_id)
                                         VALUES
                                         (#{targetUserId},#{commentUserId},#{date},#{content},#{dealId})
    </insert>


    <select id="hasDeliver" resultType="Boolean">
        select need_mailing is not null
        from store.deal
        where deal_id = #{dealId};
    </select>

</mapper>