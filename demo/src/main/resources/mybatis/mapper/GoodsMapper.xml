<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.susstore.mapper.GoodsMapper" >

    <insert id="addGoods" parameterType="Goods" useGeneratedKeys="true" keyProperty="goodsId" keyColumn="goods_id">
        insert into store."goods"
            (title,price,introduce,announcer_id,want,
             announce_time,goods_state,is_sell)
        values (#{title},#{price},#{introduce},#{announcer.userId},
                #{want},#{announceTime},#{goodsState},#{isSell})
                returning goods_id;
    </insert>
    
    <insert id="addGoodsPicture" >
        insert into store.goods_picture(goods_id,picture_path,is_activate,is_default_picture) values (#{goodsId},
        <foreach collection="pictures" item="picture" separator=",">
            #{picture.path},true,#{picture.isDefaultPicture})
        </foreach>
    </insert>

    <update id="deactivateGoodsPicture">
        update store.goods_picture set is_activate = false where goods_id = #{goodsId} and is_activate = true;
    </update>

    <update id="updateGoods" parameterType="Goods">
        update store."goods"
        <set>
            <if test="price != null"> price=#{price},</if>
            <if test="introduce != null">introduce=#{introduce},</if>
            <if test="announcer != null">announcer_id=#{announcer.userId},</if>
            <if test="want != null">want=#{want},</if>
            <if test="announceTime != null">announce_time=#{announceTime},</if>
            <if test="goodsState != null">goods_state=#{goodsState},</if>
            <if test="title != null">title=#{title},</if>
            <if test="isSell != null">is_sell=#{isSell}</if>
        </set>
        where goods_id=#{goodsId}
    </update>

    <update id="deleteGoods" parameterType="int">
        update store.goods set goods_state = 0 where goods_id = #{goodsId};
    </update>

    <select id="queryGoodsById" parameterType="int" resultType="Goods">
        select * from store.goods where goods_id = #{goodsId};
    </select>

    <select id="getGoodsPicturePath" resultType="com.susstore.pojo.GoodsPicture">
        select picture_path,is_default_picture from store.goods_picture where goods_id = #{goodsId} and is_activate = true;
    </select>

    <select id="getDefaultPicturePath" resultType="String">
        select picture_path from store.goods_picture where goods_id = #{goodsId} and is_default_picture and is_activate;
    </select>

    <select id="getAnnounceUser" resultType="com.susstore.pojo.Users">
        select * from store.goods join store.users on  goods_id = #{goodsId} and goods.announcer_id = users.user_id;
    </select>

    <select id="queryGoodsByUserId" parameterType="int" resultType="GoodsAbbreviation">
        select * from store."goods"
        where store."goods".announcer_id= #{userId};
    </select>

    <select id="getBelongUserId" parameterType="int" resultType="int">
        select store."users".user_id from
                    store."goods" join store."users"
                    on store."goods".announcer_id=store."users".user_id
        where store."goods".goods_id= #{goodsId};
    </select>
    
    <select id="searchGoods" parameterType="map" resultType="GoodsAbbreviation">
        select * from store.goods where title like concat('%',#{searchContent,jdbcType=VARCHAR},'%')
        order by goods_id limit #{pageSize} offset (${pageSize}*(${pageIndex}-1))
    </select>

    <select id="ifOnShelfById" resultType="int">
        select goods_state from store.goods where goods_id=#{goodsId}
    </select>

</mapper>